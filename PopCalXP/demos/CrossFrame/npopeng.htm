<html>
<head>
<title>PopCalendarXP 10.0.1 - Copyright Idemfactor Solutions, Inc.</title>
<style type="text/css">
.cxpNS {text-align:left;}
.cxpLT {text-decoration:line-through;}
.cxpLTB {text-decoration:line-through; font-weight:bold;}
.cxpFB {font-weight:bold;}
</style>
<script>
var gd=new Date(), gToday=[gd.getFullYear(),gd.getMonth()+1,gd.getDate()];
var ua=navigator.userAgent.toLowerCase();
var MAC=ua.indexOf('mac')!=-1,NN4=true,OP=NS6=IE5=IE4=IE=KO3=KO=SA=SA1=GK=OP8=false;
var gfSelf=this;
var gTheme=this.name.split(":");
if (/[\\'("`;\r\n]/.test(gfSelf.name) 
    || /[\.]/.test(gTheme[0]) 
    || (gTheme[2]&&gTheme[2].substring(0,6)=="share[" && /[\.]/.test(gTheme[2]))
    || /[\.]/.test(gTheme[3])) {
    var offendingName = gfSelf.name;
    // Set default values for subsequent script tags
    gfSelf.name="gToday:normal:agenda.js";
    gTheme=gfSelf.name.split(":");
    var err = ("This version of CalendarXP tries to avoid malicious XSS input but may fail passing benign parameters." 
        + "\n******** Offending iframe name: ********\n" + offendingName + "\n************************\n");
    console.log(err);
    alert(err);
    throw new Error(err);
}
var gCurMonth=eval(gTheme[0]); gCurMonth=fCalibrate(gCurMonth[0],gCurMonth[1]);
var gContainer=self,gDays=[31,31,28,31,30,31,30,31,31,30,31,30,31];
var fOnResize,fRepaint,fHoliday,fOnChange,fAfterSelected,fOnDrag,gcOtherDayBG,fOnWeekClick,fIsSelected,fParseInput,fFormatInput,fOnDoWClick,fOnload;
var __agenda=[], __stub=[];
var MILLIDAY=86400000, giInitDelay=200, _lineThru=true, _noBound=false, _mcafee=false, _animPop=NN4||IE&&!IE4&&!MAC, _animInt=20, _preferOOR=true, gbHideCalMiddle=false, _cacheOther=true;


function fCalibrate(y,m) {
	if (m<1) { y--; m+=12; }
	else if (m>12) { y++; m-=12; }
	return [y,m];
}

function fLoadScript(url) {}

function fFilterNull(str) {
	return str==null||str=="null"?null:str;
}

function fAddEvent(y,m,d,message,action,bgcolor,fgcolor,bgimg,boxit,html,etc) {
	var ag=gbShareAgenda?eval(gsAgShared):__agenda;
	ag[y+"-"+m+"-"+d]=[message,fFilterNull(action),fFilterNull(bgcolor),fFilterNull(fgcolor),fFilterNull(bgimg),fFilterNull(boxit),fFilterNull(html),etc];
}

function fGetEvent(y,m,d) {
	var ag=gbShareAgenda?eval(gsAgShared):__agenda, id=y+"-"+m+"-"+d;
	return ag[id]?ag[id].slice(0):null;
}

function fRemoveEvent(y,m,d) {
	var ag=gbShareAgenda?eval(gsAgShared):__agenda;
	ag[y+"-"+m+"-"+d]=null;
}

function fWeekOffset(dow) {
	return dow<=3?1:0;
}

function fGetDays(y) {
	gDays[2]=y%4==0&&y%100!=0||y%400==0?29:28;
	return gDays;
}

function fShowCal(xx,yy,isUp) {
	fToggle(self.document, "show");
	with (gfSelf) {
		var h=clip.height;
		if (_animPop) clip.bottom=0;
		pageX=xx; pageY=yy;
		fToggle(self.document, "hide");
		visibility="show";
	}
	if (_animPop) {
		__strips=0;
		__stub[2]=setInterval(gTheme[3]+".fAnimPop("+yy+","+h+","+isUp+")",_animInt);
	}
}

function fHideCal() {
	gfSelf.visibility="hide";
	fToggle(self.document, "show");
	if (__stub[2]) clearInterval(__stub[2]);
}

function fIsShown() {
	return gfSelf.visibility=="show";
}

var _nn4_css=["CalHead","CalCol","CalCell","CellAnchor","WeekHead","WeekCol","MonthNav","CalTop",
"CalMiddle","CalBottom","CalTitle","FreeDiv","BottomAnchor","PopAnchor","PopMenu","PopMenuItem"];
var _nn4_ids=["outerTable","innerDiv"];
document.write("<scr"+"ipt type='text/javascript' src='./"+gTheme[1]+".js?"+(_cacheOther?0:gd.getTime())+"'></scr"+"ipt>");
</script>
</head>
<body leftmargin=0 topmargin=0 marginwidth=0 marginheight=0>
<script>
var gLay,gdBegin,gdEnd,gcbMon,gcbYear,giSat,giSun,gdCtrl=new Object(),gcTemp,gRange=[],__cal=[];
for (var i=0;i<6;i++) { __cal[i]=[]; for (var j=0;j<7;j++) __cal[i][j]=[]; }
document.write("<scr"+"ipt type='text/javascript' src='./"+(gTheme[4]?gTheme[4]+(/\?/.test(gTheme[4])?"&":"?"):"plugins.js?")+(_cacheOther?0:gd.getTime())+"'></scr"+"ipt>");</script>
<script>
for (var i=0; i<_nn4_css.length; i++) {
	eval("document.classes."+_nn4_css[i]+".all.borderWidths=function(){}");
	eval("document.classes."+_nn4_css[i]+".all.paddings=function(){}");
	eval("document.classes."+_nn4_css[i]+".all.margins=function(){}");
}
for (var i=0; i<_nn4_ids.length; i++) {
	eval("document.ids."+_nn4_ids[i]+".borderWidths=function(){}");
	eval("document.ids."+_nn4_ids[i]+".paddings=function(){}");
	eval("document.ids."+_nn4_ids[i]+".margins=function(){}");
}
</script>
<script>document.write("<lin"+"k rel='stylesheet' type='text/css' href='"+gTheme[1]+".css?"+(_cacheOther?0:gd.getTime())+"'>");</script>
<script>
giSat=(6-giFirstDOW)%7;
giSun=(7-giFirstDOW)%7;
var __gdos=gdSelect.slice(0); // keep the initial selected date
gCurMonth=fCalibrate(gCurMonth[0],gCurMonth[1]);
gdSelect=gdSelect.slice(0); gBegin=gBegin.slice(0); gEnd=gEnd.slice(0);
if (gCurMonth[0]>gEnd[0]||gCurMonth[0]==gEnd[0]&&gCurMonth[1]>gEnd[1]) gCurMonth=gEnd.slice(0);
if (gCurMonth[0]<gBegin[0]||gCurMonth[0]==gBegin[0]&&gCurMonth[1]<gBegin[1]) gCurMonth=gBegin.slice(0);
if (gsSplit=="") {giMonthMode=0; gbPadZero=true;}
gWeekDay=gWeekDay.slice(giFirstDOW).concat(gWeekDay.slice(0,giFirstDOW));

if (!fIsSelected)
	fIsSelected=function(y,m,d) {
		return gdSelect[2]==d&&gdSelect[1]==m&&gdSelect[0]==y;
	}
if (!fParseInput)
	fParseInput=function(str) {
		return fParseDate(str);
	}
if (!fFormatInput)
	fFormatInput=function(y,m,d) {
		return fFormatDate(y,m,d);
	}

function fDragIt(y,m,d,aStat,e) {
	return fOnDrag&&fOnDrag(y,m,d,0,e);
}

function fRepaint() {
	fSetCal(gCurMonth[0],gCurMonth[1],0,false,null);
}

function fUpdSelect(y,m,d,bDoNotReformat) {
	gdSelect[0]=y; gdSelect[1]=m; gdSelect[2]=d;
	if (!bDoNotReformat) gdCtrl.value=d==0?"":fFormatInput(y,m,d);
}

function fPopCalendar(dateCtrl,range,posLayerId,dummy,posOffset) {
	gLay=posLayerId?eval("self.document."+posLayerId):null;
	if (gdCtrl!=dateCtrl) {fHideCal(); gdCtrl=dateCtrl;}
	else if (fIsShown()) {fHideCal(); return;}
	var s=fParseInput(gdCtrl.value);
	var b=false;
	if (s==null)
		if (__gdos[2]==0) {
			b=true; s=eval(gTheme[0]); s=[s[0],s[1],0];
		} else s=__gdos;
	fUpdSelect(s[0],s[1],s[2],b);
	fInitRange(range);
	if (gRange[2]&&fIsOutRange(s[0],s[1])) {
		if (!gbHideTop) fUpdSelect(0,0,0);
		s=gRange[2];
	}
	if (!fSetCal(s[0],s[1],0,true,null)) {
		fUpdSelect(0,0,0);
		return;
	}
	gfSelf.visibility="hide";
	var p,oh,isFixed=posOffset?posOffset[2]:gbFixedPos,isUp;
	if (isFixed) {
		p=posOffset?posOffset:gPosOffset;
		oh=0;
	} else {
		var pc=gLay?gLay.document.anchors:self.document.anchors;
		var aname=gdCtrl.name+"dummy";
		for (var i=0;i<pc.length;i++)
			if (pc[i].name.split(":")[0]==aname) break;
		if (i==pc.length) { alert("NN4 localizer <a name='"+aname+":27'> </a> not found!"); return; }
		var a=pc[i];
		p=[a.x+(gLay?gLay.left:0),a.y+(gLay?gLay.top:0)];
		p[0]+=posOffset?posOffset[0]:gPosOffset[0];
		p[1]+=posOffset?posOffset[1]:gPosOffset[1];
		oh=parseInt(a.name.split(":")[1],10);
		var h=oh+gfSelf.clip.height;
		if (gbAutoPos) {
			var xo=self.pageXOffset;
			var yo=self.pageYOffset;
			var tmp=self.innerWidth-gfSelf.clip.width+xo-16;
			p[0]=p[0]<xo?xo+1:p[0]>tmp?tmp:p[0];
			tmp=self.innerHeight+yo-h;
			isUp=p[1]>tmp&&p[1]-yo+oh>=h;
			if (p[1]>tmp&&p[1]-yo+oh<h) p[1]=yo-oh;
		} else isUp=!gbPopDown;
		if (isUp) p[1]-=h;
	}
	fShowCal(p[0],oh+p[1],isUp);
}

function fAnimPop(t,h,u) {
	__strips+=20;
	with (gfSelf)
	if (__strips<=h){
		var d=h-__strips;
		if (!u) clip.top=d;
		else clip.bottom=h-d;
		top=u?t+d:t-d;
	}
	else {
		clearInterval(__stub[2]);
		clip.top=0; clip.bottom=h; top=t;
	}
}

function fToggle(doc, stat) {
	var ls=doc.layers;
	for (var i=0; i<ls.length; i++)
		if (ls[i].name.substring(0,6)=="toggle")
			ls[i].visibility=stat;
		else if (ls[i].layers.length)
			fToggle(ls[i], stat);
}

function fInitRange(r) {
	gRange=r?r:[];
	var rb=gRange[0]?r[0]:gBegin;
	gdBegin=new Date(rb[0],rb[1]-1,rb[2]);
	gRange[0]=rb;
	var re=gRange[1]?r[1]:gEnd;
	gdEnd=new Date(re[0],re[1]-1,re[2]);
	gRange[1]=re;

	if (!gRange[2]) gRange[2]=rb.slice(0);
}

function fParseDate(ds) {
	var i,r=null,pd=[];
	if (!ds) return r;
	if (gsSplit.length>0) {
		pd=ds.split(gsSplit);
	} else {
		var yl=gbShortYear?2:4;
		if (giDatePos==2) { pd[0]=ds.substring(0,yl);pd[1]=ds.substring(yl,yl+2);pd[2]=ds.substring(yl+2,yl+4); }
		else { pd[0]=ds.substring(0,2);pd[1]=ds.substring(2,4);pd[2]=ds.substring(4,4+yl); }
	}
	if (pd.length==3) {
		var m=pd[giDatePos==1?0:1], ml=giMonthMode>1?giMonthMode:3;
		for (i=0; (i<12)&&(gMonths[i].substring(0,ml).toLowerCase()!=m.substring(0,ml).toLowerCase())&&(i+1!=m); i++);
		if (i<12) {
			var y=parseInt(pd[giDatePos==2?0:2].substring(0,4),10);
			var pf=Math.floor(gEnd[0]/100)*100;
			r=[y<100?y>gEnd[0]%100?pf-100+y:pf+y:y,i+1,parseInt(pd[giDatePos],10)];
		} else return null;
	} else return null;
	var td=new Date(r[0],r[1]-1,r[2]);
	if (isNaN(td)||td.getMonth()!=r[1]-1) return null;
	return r;
}

function fFormatDate(y,m,d){
	var M=giMonthMode==0?gbPadZero&&m<10?"0"+m:m:giMonthMode==1?gMonths[m-1]:gMonths[m-1].substring(0,giMonthMode);
	var D=gbPadZero&&d<10?"0"+d:d;
	var sy=y%100;
	var Y=gbShortYear?sy<10?"0"+sy:sy:y;
	switch (giDatePos) {
		case 0: return D+gsSplit+M+gsSplit+Y;
		case 1: return M+gsSplit+D+gsSplit+Y;
		case 2: return Y+gsSplit+M+gsSplit+D;
	}
}

function fGetAgenda(y,m,d,taint) {
	var s=fCalibrate(y,m),cm=gCurMonth;
	var def=["",gsAction,gcCellBG,null,guCellBGImg,false,gsCellHTML];
	if (taint) if ((giShowOther&4)&&(s[0]<cm[0]||s[0]==cm[0]&&s[1]<cm[1])||(giShowOther&8)&&(s[0]>cm[0]||s[0]==cm[0]&&s[1]>cm[1]))
		return null;
	var ag=fHoliday?fHoliday(s[0],s[1],d):fGetEvent(y,m,d);
	if (ag==null) ag=def;
	else {
		for (var i=0;i<7;i++) {
			if (gAgendaMask[i]!=-1) ag[i]=gAgendaMask[i];
			if (ag[i]==null&&i!=1) ag[i]=def[i];
		}
		if (taint&&s[1]!=cm[1]&&!(giShowOther&1)) {
			def[0]=ag[0]; def[1]=ag[1]; ag=null; ag=def;
		}
	}
	if (taint&&s[1]!=cm[1]) {
		if (gcOtherDayBG&&ag[2]==gcCellBG) ag[2]=gcOtherDayBG;
		ag[3]=gcOtherDay;
	}
	if (!fValidRange(s[0],s[1],d)) {
		ag[1]=null;
		if (_preferOOR&&gsOutOfRange) ag[0]=gsOutOfRange;
		if (_preferOOR&&guOutOfRange) ag[4]=guOutOfRange;
	}
	return ag;
}

function fGetDOW(y,m,d) {
	return (7+(new Date(y,m-1,d).getDay())-giFirstDOW)%7;
}

function fGetWeekNo(y,m,d) {
	var dow=fGetDOW(y,1,1);
	return Math.ceil(((Date.UTC(y,m-1,d)-Date.UTC(y,0,1))/MILLIDAY+dow-6)/7)+fWeekOffset(dow);
}

function fW2Date(y,w,wd) { // w > 0, wd > 0
	var dow=fGetDOW(y,1,1);
	w-=fWeekOffset(dow);
	var date=new Date(new Date(y,0,1)-0+(w*7+wd-dow-1)*MILLIDAY);
	return [date.getFullYear(),date.getMonth()+1,date.getDate()];
}

function fDate2W(y,m,d) {
	var w=fGetWeekNo(y,m,d), wd=fGetDOW(y,m,d)+1;
	if (w==0) { y--; w=fGetWeekNo(y,12,31); }
	else if (w>52) {
		var w1=fGetWeekNo(y+1,1,1);
		if (w1>0) { y++; w=w1; }
	}
	return [y,w,wd];
}

function fGetDateByDOW(y,m,q,dow) { // q: 1-5; dow: 0-6
	var dom=new Date(y,m-1,1).getDay();
	var d=7*q-6+dow-dom;
	if (dom>dow) d+=7;
	if (d>fGetDays(y)[m]) d-=7;
	return d;	// 1-31
}

function fValidRange(y,m,d) {
	for (var i=3; i<gRange.length; i++)
		if (gRange[i][2]==d&&gRange[i][1]==m&&gRange[i][0]==y)
			return false;
	var dt=new Date(y,m-1,d);
	return (dt>=gdBegin)&&(dt<=gdEnd);
}

function fBuildCal(y,m) {
	var days=fGetDays(y),iDay1=fGetDOW(y,m,1);
	var iLast=days[m-1]-iDay1+1,iDate=1,iNext=1;
	for (var d=0;d<7;d++) {
		__cal[0][d][0]=d<iDay1?m-1:m;
		__cal[0][d][1]=d<iDay1?iLast+d:iDate++;
	}
	for (var w=1;w<6;w++)
		for (var d=0;d<7;d++) {
			__cal[w][d][0]=iDate<=days[m]?m:m+1;
			__cal[w][d][1]=iDate<=days[m]?iDate++:iNext++;
		}
}

function fIsOutRange(y,m) {
	return (y>gRange[1][0]||y<gRange[0][0]||y==gRange[0][0]&&m<gRange[0][1]||y==gRange[1][0]&&m>gRange[1][1]);
}
function fBfRange(y,m) {
	return y<gRange[0][0]||y==gRange[0][0]&&m<=gRange[0][1];
}
function fAfRange(y,m) {
	return y>gRange[1][0]||y==gRange[1][0]&&m>=gRange[1][1];
}

function fCheckRange(y,m) {
	if (!_noBound&&fIsOutRange(y,m)) {
		if (gsOutOfRange!="") alert(gsOutOfRange);
		return false;
	}
	return true;
}

function fSetCal(y,m,d,bTriggerOnChg,e) {
	var t=fCalibrate(parseInt(y,10),parseInt(m,10));
	y=t[0];	m=t[1];
	if (!fCheckRange(y,m)||bTriggerOnChg&&fOnChange&&fOnChange(y,m,d,e)) {
		if (gcbMon) gcbMon.options[gCurMonth[1]-1].selected=true;
		if (gcbYear) gcbYear.options[gCurMonth[0]-gcbYear.options[0].value].selected=true;
		return false;
	}
	if (d>0) fUpdSelect(y,m,d);
	fDrawCal(y,m);
	if (fOnResize) fOnResize();
	return true;
}

function fSetDate(y,m,d,taint,e) {
	var ag=fGetAgenda(y,m,d,taint);
	if (ag==null||ag[1]==null) return false;
	if (!fSetCal(y,m,d,true,e)) return false;
	eval(ag[1].replace(/\n/g,"\\n"));
	if (fAfterSelected) fAfterSelected(y,m,d,e);
	if (gbAutoClose) fHideCal();
	return true;
}

function fPrevMonth(e) {
	return fSetCal(gCurMonth[0],gCurMonth[1]-1,0,true,e);
}
function fNextMonth(e) {
	return fSetCal(gCurMonth[0],gCurMonth[1]+1,0,true,e);
}
function showPrevMon() {
	fPrevMonth();
}
function showNextMon() {
	fNextMonth();
}
function stopShowMon() {}

function fHint(id) {
	gContainer.status=__tis[id];
}

var __sWH=document.classes.WeekHead.all.backgroundColor,__sCH=document.classes.CalHead.all.backgroundColor;
var __sLyr="' height='"+(giHeadHeight-giHeadTop)+"' top='"+giHeadTop+"'>",
__sWH="<TD "+(__sWH?"bgcolor="+__sWH:"")+"><ilayer><layer class='WeekHead' width='"+giWeekWidth+__sLyr,
__sCH="<TD "+(__sCH?"bgcolor="+__sCH:"")+"><ilayer><layer class='CalHead' width='"+giCellWidth+__sLyr,
__sWC="<TD class='WeekCol'>",
__sLyrTD="</layer></ilayer></TD>",
__ss=["<TD valign=top",
" bgcolor='",
" class='CalCol'><ilayer><layer class='CalCell' width='"+giCellWidth+"' height='"+giCellHeight+"' ",
"background='",
" onmouseover='if(gbFocus){gcTemp=this.bgColor;this.bgColor=gcToggle;}fHint(",
")' onmouseout='if(gbFocus)this.bgColor=gcTemp' ",
" ><A class='CellAnchor' href='javascript:void(0)' onmouseover='fHint(",
");return true' onmousedown='fDragIt(",
",0,event);fSetDate(",
",true,event);return false' ><FONT color='",
" class='cxpLTB'",
" class='cxpLT'",
" class='cxpFB'",
"</FONT></A>"],
__tis=[];

function fDrawCal(y,m) {
	var td,htm,bo,ag,i,c,c1,dayNo,dc,cbg,isT,isS,weekNo,cd,ex,bfb,sCellDate,sWkCol,weekYear;
	var ms=giMarkSelected,ht=giMarkToday;
	gCurMonth[0]=y; gCurMonth[1]=m;
	fBuildCal(y,m);
	gfSelf.visibility="hide";
	with (document) {
		clear(); open();
		var a=[this.background.src?"<BASE href='"+this.background.src+"'>":"","<BODY leftmargin=0 topmargin=0 marginwidth=0 marginheight=0 bgcolor='",gcCalBG,"'><TABLE id='outerTable' ",gsOuterTable,"><FORM name='cxpTopForm'>"];
		if (!gbHideTop)
		if (giDCStyle==2)
			a.push("<TR><TD class='CalTop' nowrap><SPAN class='CalTitle'>",eval(gsCalTitle),"</SPAN></TD></TR>");
		else {
			a.push("<TR><TD class='CalTop' nowrap><table border=0 cellspacing=0 cellpadding=0 width='100%'><tr>");
			if (giDCStyle==1) {
				a.push("<TD align='left' nowrap>",gsNavPrev,"</TD><TD align='center' class='CalTitle' nowrap>");
				a.push(eval(gsCalTitle));
				a.push("</TD><TD align='right' nowrap>",gsNavNext,"</TD></tr></table></TD></TR>");
			} else {
				a.push("<TD align='left' nowrap>",gsNavPrev,"</TD>");
				var mstr=["<TD class='CalTitle' align='center' nowrap><SELECT name='MonSelect' class='CalTitle' onchange='fSetCal(gcbYear.options[gcbYear.selectedIndex].value,gcbMon.options[gcbMon.selectedIndex].value,0,true,event)'>"];
				for (i=0;i<12;i++) {
					mstr.push("<OPTION value='",i+1,"'>",gMonths[i],"</OPTION>");
				}
				mstr.push("</SELECT></TD>"); mstr=mstr.join('');
				var ystr=["<TD class='CalTitle' align='center' nowrap><SELECT name='YearSelect' class='CalTitle' onchange='fSetCal(gcbYear.options[gcbYear.selectedIndex].value,gcbMon.options[gcbMon.selectedIndex].value,0,true,event)'>"];
				for(i=gdBegin.getFullYear();i<=gdEnd.getFullYear();i++) {
					ystr.push("<OPTION value='",i,"'>",eval(gsYearInBox),"</OPTION>");
				}
				ystr.push("</SELECT></TD>"); ystr=ystr.join('');
				if (gbDCSeq)
					a.push(mstr,ystr);
				else
					a.push(ystr,mstr);
				a.push("</TD><TD align='right' nowrap>",gsNavNext,"</TD></tr></table></TD></TR>");
			}
		}
		a.push("</FORM>");
		if (!gbHideCalMiddle){
			a.push("<TR class='CalMiddle'><TD class='cxpNS'><ilayer><layer id='innerDiv' ");
			if(guCalBG)a.push("background='",guCalBG,"'");
			a.push(" bgColor='",gcCalFrame,"'><TABLE width='100%' ",gsInnerTable," ><TR>");
			for (var wd=0,i=0; i<8; i++)
				if (i==giWeekCol) a.push(__sWH,gsWeekHead,__sLyrTD);
				else if (i!=7||giWeekCol>=0) {
					var sDoW=fOnDoWClick?"<a class='DoWAnchor' href='javascript:void(0)' onclick='fOnDoWClick("
	       +y+","+m+","+(giFirstDOW+wd)%7+");return false;'>"+gWeekDay[wd]+"</a>":"<span class='DoWAnchor'>"+gWeekDay[wd]+"</span>"
					a.push(__sCH,sDoW,__sLyrTD); wd++;
				}
			a.push("</TR>");
			if (giWeekCol>=0) {
				var w=fDate2W(y,m,1);
				weekYear=w[0];
				weekNo=w[1];
			}
			for (var week=0; week<6; week++) {
				ex=week>3&&__cal[week][0][1]<20;
				if (gbShrink2fit&&ex) continue;
				a.push("<TR>");
				for (var day=-1,i=0; i<8; i++)
				if (i==giWeekCol) {
					sWkCol=fOnWeekClick?"<a class='WeekAnchor' href='javascript:void(0)' onclick='fOnWeekClick("+weekYear+","
	       +weekNo+");return false;'>"+eval(gsWeeks)+"</a>":"<span class='WeekAnchor'>"+eval(gsWeeks)+"</span>";
					a.push(__sWC,(giShowOther&8)&&!(giShowOther&16)&&ex?"<span class='WeekAnchor'>&nbsp;</span>":sWkCol,"</TD>");
					if (m==1&&weekNo>50||m==12&&weekNo>=52&&weekNo>=fDate2W(y,12,31)[1]) {
						weekNo=0; weekYear++;
					}
					weekNo++;
				} else if (i!=7||giWeekCol>=0) {
					day++; dayNo=__cal[week][day][1];
					var tid=week*10+day;
					cd=fCalibrate(y,__cal[week][day][0]);
					isT=gToday[2]==dayNo&&gToday[1]==cd[1]&&gToday[0]==cd[0];
					ag=fGetAgenda(cd[0],cd[1],dayNo,true);
					if (ag==null) {
						dc=giShowOther&16&&(week<2&&(giShowOther&4)||week>3&&(giShowOther&8))?gcOtherDay:"";
						cbg=null; bo=td=false; __tis[tid]=htm=""; c=c1=gcOtherDayBG;
					} else {
						isS=fIsSelected(cd[0],cd[1],dayNo)&&ag[1]!=null;
						var bt=ag[5]+""=="true";
						if (cd[1]==m||(giShowOther&2)) {
							c=isS&&(ms&2)?gcBGSelected:ag[5]?bt?ag[2]:ag[5]:ag[2]==gcCellBG&&isT&&(ht&3)?gcBGToday:ag[2];
							c1=isS&&(ms&1)&&gcBGSelected?gcBGSelected:ag[2]==gcCellBG||bt?isT&&(ht&1)&&gcBGToday?gcBGToday:gcCellBG:ag[2];
							bo=isS&&(ms&4)||isT&&(ht&4);
							dc=isS&&(ms&8)?gcFGSelected:ag[3]==null&&isT&&(ht&8)?gcFGToday:ag[3];
							cbg=isS&&(ms&16)?guSelectedBGImg:ag[4]==guCellBGImg&&isT&&(ht&16)?guTodayBGImg:ag[4];
						} else {
							bo=false; c=ag[5]&&!bt?ag[5]:ag[2]; c1=bt?gcCellBG:ag[2]; dc=ag[3]; cbg=ag[4];
						}
						bo=gbBoldAgenda&&ag[0]&&ag[0]!=gsOutOfRange||bo;
						htm=ag[6]?ag[6]:"";
						td=ag[1]==null&&_lineThru;
						__tis[tid]=isS&&gsSelectedTip?gsSelectedTip:ag[0]?ag[0]:isT&&gsTodayTip?gsTodayTip:"";
						if (day==giSun&&gcSunBG){c1=c1==gcCellBG?gcSunBG:c1; c=c==gcCellBG?gcSunBG:c;}
						if (day==giSat&&gcSatBG){c1=c1==gcCellBG?gcSatBG:c1; c=c==gcCellBG?gcSatBG:c;}
						if (dc==null) dc=day==giSun?gcSun:day==giSat?gcSat:gcWorkday;
					}
					if (gbInvertBold) bo=!bo;
					sCellDate=cd[0]+","+cd[1]+","+dayNo;
					a.push(__ss[0]);if(c)a.push(__ss[1]+c+"'");a.push(__ss[2]);if(c1)a.push(__ss[1]+c1+"'");
					if(cbg)a.push(__ss[3]+cbg+"'");if(dc=="")a.push(" onmouseover='fHint(",tid,")'><font class='CellAnchor'>&nbsp;</font>",__sLyrTD);else{a.push(__ss[4],tid,__ss[5]);
					a.push(__ss[6],tid,__ss[7],sCellDate,__ss[8],sCellDate,__ss[9],dc,"'",td?bo?__ss[10]:__ss[11]:bo?__ss[12]:"",">",eval(gsDays),__ss[13],htm,__sLyrTD);}
					ag=null;
				}
				a.push("</TR>");
			}
			a.push("</TABLE></layer></ilayer></TD></TR>");
		}
		if (!gbHideBottom) a.push("<FORM name='cxpBottomForm'><TR><TD class='CalBottom' nowrap>",gsBottom,"</TD></TR></FORM>");
		a.push("</TABLE>");
		for (i=0;i<giFreeDiv;i++)
			a.push("<layer class='FreeDiv' id='freeDiv",i,"' visibility='hide'></layer>");
		a.push("</BODY>");
		write(a.join(''));
		if (giDCStyle==0) {
			gcbMon=document.forms["cxpTopForm"].MonSelect;
			gcbYear=document.forms["cxpTopForm"].YearSelect;
			gcbMon.options[m-1].selected=true;
			gcbYear.options[y-gcbYear.options[0].value].selected=true;
		}
		close();
	}
	gfSelf.visibility="show";
}
</script>
<script>
if (!gTheme[3]) gTheme[3]="gfPop";
var __isAS=gTheme[2]&&gTheme[2].substring(0,6)=="share[";
if (gbShareAgenda==true) {
	if (!eval(gsAgShared)) eval(gsAgShared+"=[]");
	if (__isAS) fHoliday=eval(gTheme[2].split('[')[1].split(']')[0]).fHoliday;
}
if (gTheme[2]&&!__isAS) document.write("<scr"+"ipt type='text/javascript' src='./"+gTheme[2]+(gbCacheAgenda?"":(/\?/.test(gTheme[2])?"&":"?")+gd.getTime())+"'></scr"+"ipt>");
</script>
<script>
eval("self."+gTheme[3]+"=gfSelf");
fInitRange();
if(fOnload) fOnload();
</script>
</body>
</html>
